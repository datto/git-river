name: "CI"
on: ["push", "pull_request"]
jobs:
  lint:
    name: "🐍 Lint Python modules"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version:
          - "3.10"
    steps:
      - uses: "actions/checkout@master"
      - name: "🐍 Install Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v3"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "🐍 Display Python version"
        run: "python --version"
      - name: "🐍 Install Poetry"
        run: "python -m pip install --user poetry"
      - name: "🐍 Install dependencies"
        run: "python -m poetry install"
      - name: "🐍 Run mypy"
        run: "python -m poetry run mypy ."
      - name: "🐍 Run black"
        run: "python -m poetry run black --check ."
  test:
    name: "🐍 Test Python modules"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version:
          - "3.9"
          - "3.10"
    steps:
      - uses: "actions/checkout@master"
      - name: "🐍 Install Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v3"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "🐍 Display Python version"
        run: "python --version"
      - name: "🐍 Install Poetry"
        run: "python -m pip install --user poetry"
      - name: "🐍 Install dependencies"
        run: "python -m poetry install"
      - name: "🐍 Run pytest"
        run: "python -m poetry run pytest"
  publish:
    name: "📦 Publish Python distributions"
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python-version:
          - "3.10"
    steps:
      - uses: "actions/checkout@master"
      - name: "🐍 Install Python ${{ matrix.python-version }}"
        uses: "actions/setup-python@v3"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "🐍 Display Python version"
        run: "python --version"
      - name: "🐍 Install Poetry"
        run: "python -m pip install --user poetry"
      - name: "📦 Build distributions"
        run: "poetry build"
      - name: "📦 Publish distributions to PyPI"
        run: "poetry publish --no-interaction --username __token__ --password ${{ secrets.PYPI_TOKEN }}"
        if: "github.event_name == 'push' && startsWith(github.ref, 'refs/tags')"
